@model hw5.Models.Renter

@{
    ViewBag.Title = "Submit Requests";
}

<h2>Campus Apartments</h2>


@using (Html.BeginForm())
{
    //prevent user generating fake sessions/spams
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Tennant Request Form</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.FirstName, "First Name: ", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4">
                    @Html.LabelFor(model => model.LastName, "Last Name: ", htmlAttributes: new { @class = "control-labe" })
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.ApartmentName, "Apartment Name: ", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ApartmentName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ApartmentName, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-6">
                    @Html.LabelFor(model => model.UnitNumber, "Unit Number: ", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.UnitNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UnitNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.CommentBox, "Comment: ", htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.CommentBox, 10, 40, htmlAttributes: new { style = "width: 100%; max-width: 100%;", placeholder = "Explanation of request, maintenance required or complaint. Please be specific." })
                    @Html.ValidationMessageFor(model => model.CommentBox, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>

                @*<div class="col-md-6">*@
                    @Html.LabelFor(model => model.AgreementChecked, "Select here to give permission for the landlord or representative to enter your unit to perform the requested maintenance. We will call first. ", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.AgreementChecked)
                    @Html.ValidationMessageFor(model => model.AgreementChecked, "", new { @class = "text-danger" })
                @*</div>*@
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
